$comment
	File created using the following command:
		vcd file alu.msim.vcd -direction
$end
$date
	Tue Sep 19 11:44:06 2023
$end
$version
	ModelSim Version 10.5b
$end
$timescale
	1ps
$end

$scope module alu_vlg_vec_tst $end
$var reg 5 ! ctrl_ALUopcode [4:0] $end
$var reg 5 " ctrl_shiftamt [4:0] $end
$var reg 32 # data_operandA [31:0] $end
$var reg 32 $ data_operandB [31:0] $end
$var wire 1 % data_result [31] $end
$var wire 1 & data_result [30] $end
$var wire 1 ' data_result [29] $end
$var wire 1 ( data_result [28] $end
$var wire 1 ) data_result [27] $end
$var wire 1 * data_result [26] $end
$var wire 1 + data_result [25] $end
$var wire 1 , data_result [24] $end
$var wire 1 - data_result [23] $end
$var wire 1 . data_result [22] $end
$var wire 1 / data_result [21] $end
$var wire 1 0 data_result [20] $end
$var wire 1 1 data_result [19] $end
$var wire 1 2 data_result [18] $end
$var wire 1 3 data_result [17] $end
$var wire 1 4 data_result [16] $end
$var wire 1 5 data_result [15] $end
$var wire 1 6 data_result [14] $end
$var wire 1 7 data_result [13] $end
$var wire 1 8 data_result [12] $end
$var wire 1 9 data_result [11] $end
$var wire 1 : data_result [10] $end
$var wire 1 ; data_result [9] $end
$var wire 1 < data_result [8] $end
$var wire 1 = data_result [7] $end
$var wire 1 > data_result [6] $end
$var wire 1 ? data_result [5] $end
$var wire 1 @ data_result [4] $end
$var wire 1 A data_result [3] $end
$var wire 1 B data_result [2] $end
$var wire 1 C data_result [1] $end
$var wire 1 D data_result [0] $end
$var wire 1 E isLessThan $end
$var wire 1 F isNotEqual $end
$var wire 1 G overflow $end

$scope module i1 $end
$var wire 1 H gnd $end
$var wire 1 I vcc $end
$var wire 1 J unknown $end
$var tri1 1 K devclrn $end
$var tri1 1 L devpor $end
$var tri1 1 M devoe $end
$var wire 1 N ctrl_ALUopcode[1]~input_o $end
$var wire 1 O ctrl_ALUopcode[2]~input_o $end
$var wire 1 P ctrl_ALUopcode[3]~input_o $end
$var wire 1 Q ctrl_ALUopcode[4]~input_o $end
$var wire 1 R ctrl_shiftamt[0]~input_o $end
$var wire 1 S ctrl_shiftamt[1]~input_o $end
$var wire 1 T ctrl_shiftamt[2]~input_o $end
$var wire 1 U ctrl_shiftamt[3]~input_o $end
$var wire 1 V ctrl_shiftamt[4]~input_o $end
$var wire 1 W data_result[0]~output_o $end
$var wire 1 X data_result[1]~output_o $end
$var wire 1 Y data_result[2]~output_o $end
$var wire 1 Z data_result[3]~output_o $end
$var wire 1 [ data_result[4]~output_o $end
$var wire 1 \ data_result[5]~output_o $end
$var wire 1 ] data_result[6]~output_o $end
$var wire 1 ^ data_result[7]~output_o $end
$var wire 1 _ data_result[8]~output_o $end
$var wire 1 ` data_result[9]~output_o $end
$var wire 1 a data_result[10]~output_o $end
$var wire 1 b data_result[11]~output_o $end
$var wire 1 c data_result[12]~output_o $end
$var wire 1 d data_result[13]~output_o $end
$var wire 1 e data_result[14]~output_o $end
$var wire 1 f data_result[15]~output_o $end
$var wire 1 g data_result[16]~output_o $end
$var wire 1 h data_result[17]~output_o $end
$var wire 1 i data_result[18]~output_o $end
$var wire 1 j data_result[19]~output_o $end
$var wire 1 k data_result[20]~output_o $end
$var wire 1 l data_result[21]~output_o $end
$var wire 1 m data_result[22]~output_o $end
$var wire 1 n data_result[23]~output_o $end
$var wire 1 o data_result[24]~output_o $end
$var wire 1 p data_result[25]~output_o $end
$var wire 1 q data_result[26]~output_o $end
$var wire 1 r data_result[27]~output_o $end
$var wire 1 s data_result[28]~output_o $end
$var wire 1 t data_result[29]~output_o $end
$var wire 1 u data_result[30]~output_o $end
$var wire 1 v data_result[31]~output_o $end
$var wire 1 w isNotEqual~output_o $end
$var wire 1 x isLessThan~output_o $end
$var wire 1 y overflow~output_o $end
$var wire 1 z data_operandB[0]~input_o $end
$var wire 1 { data_operandA[0]~input_o $end
$var wire 1 | mux1|mux0|or0~0_combout $end
$var wire 1 } data_operandB[1]~input_o $end
$var wire 1 ~ data_operandA[1]~input_o $end
$var wire 1 !! subtraction0|comb_35|RCA0|FA1|xor0~0_combout $end
$var wire 1 "! ctrl_ALUopcode[0]~input_o $end
$var wire 1 #! mux1|mux1|or0~0_combout $end
$var wire 1 $! subtraction0|comb_35|RCA0|FA1|or0~combout $end
$var wire 1 %! data_operandA[2]~input_o $end
$var wire 1 &! data_operandB[2]~input_o $end
$var wire 1 '! subtraction0|comb_35|RCA0|FA2|xor0~0_combout $end
$var wire 1 (! addition0|comb_3|RCA0|FA1|or0~0_combout $end
$var wire 1 )! mux1|mux2|or0~0_combout $end
$var wire 1 *! addition0|comb_3|RCA0|FA2|or0~0_combout $end
$var wire 1 +! data_operandA[3]~input_o $end
$var wire 1 ,! data_operandB[3]~input_o $end
$var wire 1 -! subtraction0|comb_35|RCA0|FA3|xor0~0_combout $end
$var wire 1 .! subtraction0|comb_35|RCA0|FA2|or0~combout $end
$var wire 1 /! mux1|mux3|or0~0_combout $end
$var wire 1 0! subtraction0|comb_35|RCA0|FA3|or0~combout $end
$var wire 1 1! data_operandB[4]~input_o $end
$var wire 1 2! data_operandA[4]~input_o $end
$var wire 1 3! subtraction0|comb_35|RCA0|FA4|xor0~0_combout $end
$var wire 1 4! addition0|comb_3|RCA0|FA3|or0~0_combout $end
$var wire 1 5! mux1|mux4|or0~0_combout $end
$var wire 1 6! subtraction0|comb_35|RCA0|FA3|and0~combout $end
$var wire 1 7! subtraction0|comb_35|RCA0|FA3|and1~combout $end
$var wire 1 8! subtraction0|comb_35|RCA0|FA4|or0~combout $end
$var wire 1 9! data_operandA[5]~input_o $end
$var wire 1 :! data_operandB[5]~input_o $end
$var wire 1 ;! subtraction0|comb_35|RCA0|FA5|xor0~0_combout $end
$var wire 1 <! addition0|comb_3|RCA0|FA4|or0~0_combout $end
$var wire 1 =! mux1|mux5|or0~0_combout $end
$var wire 1 >! subtraction0|comb_35|RCA0|FA5|or0~combout $end
$var wire 1 ?! addition0|comb_3|RCA0|FA5|or0~0_combout $end
$var wire 1 @! data_operandB[6]~input_o $end
$var wire 1 A! data_operandA[6]~input_o $end
$var wire 1 B! subtraction0|comb_35|RCA0|FA6|xor0~0_combout $end
$var wire 1 C! mux1|mux6|or0~0_combout $end
$var wire 1 D! data_operandB[7]~input_o $end
$var wire 1 E! data_operandA[7]~input_o $end
$var wire 1 F! subtraction0|comb_35|RCA0|FA7|xor0~0_combout $end
$var wire 1 G! addition0|comb_3|RCA0|FA6|or0~0_combout $end
$var wire 1 H! subtraction0|comb_35|RCA0|FA6|or0~combout $end
$var wire 1 I! mux1|mux7|or0~0_combout $end
$var wire 1 J! addition0|comb_3|RCA0|FA7|or0~0_combout $end
$var wire 1 K! data_operandA[8]~input_o $end
$var wire 1 L! data_operandB[8]~input_o $end
$var wire 1 M! subtraction0|comb_35|RCA0|FA8|xor0~0_combout $end
$var wire 1 N! subtraction0|comb_35|RCA0|FA7|or0~combout $end
$var wire 1 O! mux1|mux8|or0~0_combout $end
$var wire 1 P! subtraction0|comb_35|RCA0|FA8|or0~combout $end
$var wire 1 Q! data_operandB[9]~input_o $end
$var wire 1 R! data_operandA[9]~input_o $end
$var wire 1 S! subtraction0|comb_35|RCA0|FA9|xor0~0_combout $end
$var wire 1 T! addition0|comb_3|RCA0|FA8|or0~0_combout $end
$var wire 1 U! mux1|mux9|or0~0_combout $end
$var wire 1 V! data_operandA[10]~input_o $end
$var wire 1 W! data_operandB[10]~input_o $end
$var wire 1 X! subtraction0|comb_35|RCA0|FA10|xor0~0_combout $end
$var wire 1 Y! subtraction0|comb_35|RCA0|FA9|or0~combout $end
$var wire 1 Z! addition0|comb_3|RCA0|FA9|or0~0_combout $end
$var wire 1 [! mux1|mux10|or0~0_combout $end
$var wire 1 \! addition0|comb_3|RCA0|FA10|or0~0_combout $end
$var wire 1 ]! subtraction0|comb_35|RCA0|FA10|or0~combout $end
$var wire 1 ^! data_operandA[11]~input_o $end
$var wire 1 _! data_operandB[11]~input_o $end
$var wire 1 `! subtraction0|comb_35|RCA0|FA11|xor0~0_combout $end
$var wire 1 a! mux1|mux11|or0~0_combout $end
$var wire 1 b! subtraction0|comb_35|RCA0|FA11|or0~combout $end
$var wire 1 c! addition0|comb_3|RCA0|FA11|or0~0_combout $end
$var wire 1 d! data_operandB[12]~input_o $end
$var wire 1 e! data_operandA[12]~input_o $end
$var wire 1 f! subtraction0|comb_35|RCA0|FA12|xor0~0_combout $end
$var wire 1 g! mux1|mux12|or0~0_combout $end
$var wire 1 h! data_operandB[13]~input_o $end
$var wire 1 i! data_operandA[13]~input_o $end
$var wire 1 j! subtraction0|comb_35|RCA0|FA13|xor0~0_combout $end
$var wire 1 k! addition0|comb_3|RCA0|FA12|or0~0_combout $end
$var wire 1 l! subtraction0|comb_35|RCA0|FA12|or0~combout $end
$var wire 1 m! mux1|mux13|or0~0_combout $end
$var wire 1 n! addition0|comb_3|RCA0|FA13|or0~0_combout $end
$var wire 1 o! data_operandA[14]~input_o $end
$var wire 1 p! data_operandB[14]~input_o $end
$var wire 1 q! subtraction0|comb_35|RCA0|FA14|xor0~0_combout $end
$var wire 1 r! subtraction0|comb_35|RCA0|FA13|or0~combout $end
$var wire 1 s! mux1|mux14|or0~0_combout $end
$var wire 1 t! subtraction0|comb_35|RCA0|FA14|or0~combout $end
$var wire 1 u! data_operandB[15]~input_o $end
$var wire 1 v! data_operandA[15]~input_o $end
$var wire 1 w! subtraction0|comb_35|RCA0|FA15|xor0~0_combout $end
$var wire 1 x! addition0|comb_3|RCA0|FA14|or0~0_combout $end
$var wire 1 y! mux1|mux15|or0~0_combout $end
$var wire 1 z! data_operandA[16]~input_o $end
$var wire 1 {! data_operandB[16]~input_o $end
$var wire 1 |! subtraction0|comb_35|mux1|mux0|or0~0_combout $end
$var wire 1 }! addition0|comb_3|RCA0|FA15|or0~0_combout $end
$var wire 1 ~! subtraction0|comb_35|RCA0|FA15|or0~combout $end
$var wire 1 !" mux1|mux16|or0~0_combout $end
$var wire 1 "" data_operandA[17]~input_o $end
$var wire 1 #" data_operandB[17]~input_o $end
$var wire 1 $" subtraction0|comb_35|RCA1|FA1|xor0~0_combout $end
$var wire 1 %" mux1|mux17|or0~0_combout $end
$var wire 1 &" subtraction0|comb_35|mux1|mux1|or0~0_combout $end
$var wire 1 '" mux1|mux17|or0~1_combout $end
$var wire 1 (" addition0|comb_3|RCA1|FA1|or0~0_combout $end
$var wire 1 )" addition0|comb_3|RCA2|FA1|or0~0_combout $end
$var wire 1 *" data_operandB[18]~input_o $end
$var wire 1 +" data_operandA[18]~input_o $end
$var wire 1 ," subtraction0|comb_35|RCA1|FA2|xor0~0_combout $end
$var wire 1 -" mux1|mux18|or0~0_combout $end
$var wire 1 ." subtraction0|comb_35|mux1|mux2|or0~0_combout $end
$var wire 1 /" mux1|mux18|or0~1_combout $end
$var wire 1 0" addition0|comb_3|RCA2|FA2|or0~0_combout $end
$var wire 1 1" data_operandB[19]~input_o $end
$var wire 1 2" data_operandA[19]~input_o $end
$var wire 1 3" subtraction0|comb_35|RCA1|FA3|xor0~0_combout $end
$var wire 1 4" addition0|comb_3|RCA1|FA2|or0~0_combout $end
$var wire 1 5" mux1|mux19|or0~0_combout $end
$var wire 1 6" subtraction0|comb_35|mux1|mux2|or0~1_combout $end
$var wire 1 7" subtraction0|comb_35|RCA1|FA1|and1~0_combout $end
$var wire 1 8" subtraction0|comb_35|mux1|mux3|or0~0_combout $end
$var wire 1 9" mux1|mux19|or0~1_combout $end
$var wire 1 :" addition0|comb_3|RCA1|FA3|or0~0_combout $end
$var wire 1 ;" addition0|comb_3|RCA2|FA3|or0~0_combout $end
$var wire 1 <" data_operandA[20]~input_o $end
$var wire 1 =" data_operandB[20]~input_o $end
$var wire 1 >" subtraction0|comb_35|RCA1|FA4|xor0~0_combout $end
$var wire 1 ?" mux1|mux20|or0~0_combout $end
$var wire 1 @" subtraction0|comb_35|mux1|mux4|or0~0_combout $end
$var wire 1 A" mux1|mux20|or0~1_combout $end
$var wire 1 B" data_operandB[21]~input_o $end
$var wire 1 C" data_operandA[21]~input_o $end
$var wire 1 D" subtraction0|comb_35|RCA1|FA5|xor0~0_combout $end
$var wire 1 E" subtraction0|comb_35|mux1|mux5|or0~0_combout $end
$var wire 1 F" addition0|comb_3|RCA1|FA4|or0~0_combout $end
$var wire 1 G" addition0|comb_3|RCA2|FA4|or0~0_combout $end
$var wire 1 H" mux1|mux21|or0~0_combout $end
$var wire 1 I" mux1|mux21|or0~1_combout $end
$var wire 1 J" data_operandA[22]~input_o $end
$var wire 1 K" data_operandB[22]~input_o $end
$var wire 1 L" subtraction0|comb_35|RCA1|FA6|xor0~0_combout $end
$var wire 1 M" addition0|comb_3|RCA2|FA5|or0~0_combout $end
$var wire 1 N" addition0|comb_3|RCA1|FA5|or0~0_combout $end
$var wire 1 O" mux1|mux22|or0~0_combout $end
$var wire 1 P" subtraction0|comb_35|RCA1|FA4|and1~0_combout $end
$var wire 1 Q" subtraction0|comb_35|mux1|mux5|or0~1_combout $end
$var wire 1 R" subtraction0|comb_35|mux1|mux6|or0~0_combout $end
$var wire 1 S" mux1|mux22|or0~1_combout $end
$var wire 1 T" addition0|comb_3|RCA1|FA6|or0~0_combout $end
$var wire 1 U" addition0|comb_3|RCA2|FA6|or0~0_combout $end
$var wire 1 V" data_operandA[23]~input_o $end
$var wire 1 W" data_operandB[23]~input_o $end
$var wire 1 X" subtraction0|comb_35|RCA1|FA7|xor0~0_combout $end
$var wire 1 Y" mux1|mux23|or0~0_combout $end
$var wire 1 Z" subtraction0|comb_35|mux1|mux7|or0~8_combout $end
$var wire 1 [" mux1|mux23|or0~1_combout $end
$var wire 1 \" addition0|comb_3|RCA1|FA7|or0~0_combout $end
$var wire 1 ]" data_operandB[24]~input_o $end
$var wire 1 ^" data_operandA[24]~input_o $end
$var wire 1 _" subtraction0|comb_35|RCA1|FA8|xor0~0_combout $end
$var wire 1 `" addition0|comb_3|RCA2|FA7|or0~0_combout $end
$var wire 1 a" mux1|mux24|or0~0_combout $end
$var wire 1 b" subtraction0|comb_35|mux1|mux8|or0~0_combout $end
$var wire 1 c" mux1|mux24|or0~1_combout $end
$var wire 1 d" addition0|comb_3|RCA1|FA8|or0~0_combout $end
$var wire 1 e" addition0|comb_3|RCA2|FA8|or0~0_combout $end
$var wire 1 f" data_operandA[25]~input_o $end
$var wire 1 g" data_operandB[25]~input_o $end
$var wire 1 h" subtraction0|comb_35|RCA1|FA9|xor0~0_combout $end
$var wire 1 i" mux1|mux25|or0~0_combout $end
$var wire 1 j" subtraction0|comb_35|mux1|mux9|or0~0_combout $end
$var wire 1 k" mux1|mux25|or0~1_combout $end
$var wire 1 l" subtraction0|comb_35|mux1|mux10|or0~8_combout $end
$var wire 1 m" addition0|comb_3|RCA2|FA9|or0~0_combout $end
$var wire 1 n" addition0|comb_3|RCA1|FA9|or0~0_combout $end
$var wire 1 o" data_operandB[26]~input_o $end
$var wire 1 p" data_operandA[26]~input_o $end
$var wire 1 q" subtraction0|comb_35|RCA1|FA10|xor0~0_combout $end
$var wire 1 r" mux1|mux26|or0~0_combout $end
$var wire 1 s" mux1|mux26|or0~1_combout $end
$var wire 1 t" data_operandA[27]~input_o $end
$var wire 1 u" data_operandB[27]~input_o $end
$var wire 1 v" subtraction0|comb_35|RCA1|FA11|xor0~0_combout $end
$var wire 1 w" subtraction0|comb_35|mux1|mux11|or0~0_combout $end
$var wire 1 x" addition0|comb_3|RCA1|FA10|or0~0_combout $end
$var wire 1 y" addition0|comb_3|RCA2|FA10|or0~0_combout $end
$var wire 1 z" mux1|mux27|or0~0_combout $end
$var wire 1 {" mux1|mux27|or0~1_combout $end
$var wire 1 |" subtraction0|comb_35|RCA1|FA10|and1~0_combout $end
$var wire 1 }" subtraction0|comb_35|mux1|mux11|or0~1_combout $end
$var wire 1 ~" subtraction0|comb_35|mux1|mux12|or0~0_combout $end
$var wire 1 !# data_operandA[28]~input_o $end
$var wire 1 "# data_operandB[28]~input_o $end
$var wire 1 ## subtraction0|comb_35|RCA1|FA12|xor0~0_combout $end
$var wire 1 $# addition0|comb_3|RCA2|FA11|or0~0_combout $end
$var wire 1 %# addition0|comb_3|RCA1|FA11|or0~0_combout $end
$var wire 1 &# mux1|mux28|or0~0_combout $end
$var wire 1 '# mux1|mux28|or0~1_combout $end
$var wire 1 (# data_operandA[29]~input_o $end
$var wire 1 )# data_operandB[29]~input_o $end
$var wire 1 *# subtraction0|comb_35|RCA1|FA13|xor0~0_combout $end
$var wire 1 +# addition0|comb_3|RCA1|FA12|or0~0_combout $end
$var wire 1 ,# addition0|comb_3|RCA2|FA12|or0~0_combout $end
$var wire 1 -# mux1|mux29|or0~0_combout $end
$var wire 1 .# subtraction0|comb_35|mux1|mux13|or0~0_combout $end
$var wire 1 /# mux1|mux29|or0~1_combout $end
$var wire 1 0# data_operandA[30]~input_o $end
$var wire 1 1# data_operandB[30]~input_o $end
$var wire 1 2# mux1|mux30|or0~10_combout $end
$var wire 1 3# mux1|mux30|or0~11_combout $end
$var wire 1 4# mux1|mux30|or0~12_combout $end
$var wire 1 5# mux1|mux30|or0~8_combout $end
$var wire 1 6# mux1|mux30|or0~9_combout $end
$var wire 1 7# subtraction0|comb_35|RCA1|FA9|and1~0_combout $end
$var wire 1 8# subtraction0|comb_35|RCA2|FA6|or0~0_combout $end
$var wire 1 9# subtraction0|comb_35|RCA2|FA6|or0~1_combout $end
$var wire 1 :# subtraction0|comb_35|RCA1|FA3|and1~0_combout $end
$var wire 1 ;# subtraction0|comb_35|RCA2|FA6|or0~2_combout $end
$var wire 1 <# subtraction0|comb_35|RCA2|FA6|or0~3_combout $end
$var wire 1 =# subtraction0|comb_35|RCA1|FA6|and1~0_combout $end
$var wire 1 ># subtraction0|comb_35|RCA2|FA13|or0~0_combout $end
$var wire 1 ?# subtraction0|comb_35|RCA2|FA13|or0~1_combout $end
$var wire 1 @# subtraction0|comb_35|RCA2|FA13|or0~2_combout $end
$var wire 1 A# subtraction0|comb_35|RCA1|FA7|or0~0_combout $end
$var wire 1 B# subtraction0|comb_35|RCA1|FA7|or0~1_combout $end
$var wire 1 C# subtraction0|comb_35|RCA1|FA7|or0~2_combout $end
$var wire 1 D# subtraction0|comb_35|RCA1|FA7|or0~3_combout $end
$var wire 1 E# subtraction0|comb_35|RCA1|FA7|or0~4_combout $end
$var wire 1 F# subtraction0|comb_35|RCA1|FA14|or0~0_combout $end
$var wire 1 G# subtraction0|comb_35|RCA1|FA14|or0~1_combout $end
$var wire 1 H# subtraction0|comb_35|mux1|mux15|or0~11_combout $end
$var wire 1 I# subtraction0|comb_35|mux1|mux15|or0~12_combout $end
$var wire 1 J# subtraction0|comb_35|mux1|mux15|or0~8_combout $end
$var wire 1 K# subtraction0|comb_35|mux1|mux15|or0~10_combout $end
$var wire 1 L# data_operandA[31]~input_o $end
$var wire 1 M# data_operandB[31]~input_o $end
$var wire 1 N# subtraction0|comb_35|RCA2|FA15|xor1~0_combout $end
$var wire 1 O# subtraction0|comb_35|mux1|mux15|or0~9_combout $end
$var wire 1 P# addition0|comb_3|mux1|mux15|or0~0_combout $end
$var wire 1 Q# mux1|mux31|or0~0_combout $end
$var wire 1 R# mux0|or0~0_combout $end
$var wire 1 S# mux0|or0~1_combout $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 !
bx "
b0 #
b0 $
0D
0C
0B
0A
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0E
0F
0G
0H
1I
xJ
1K
1L
1M
0N
0O
0P
0Q
xR
xS
xT
xU
xV
0W
0X
0Y
0Z
0[
0\
0]
0^
0_
0`
0a
0b
0c
0d
0e
0f
0g
0h
0i
0j
0k
0l
0m
0n
0o
0p
0q
0r
0s
0t
0u
0v
0w
0x
0y
0z
0{
0|
0}
0~
0!!
0"!
0#!
1$!
0%!
0&!
0'!
0(!
0)!
0*!
0+!
0,!
0-!
1.!
0/!
10!
01!
02!
03!
04!
05!
16!
07!
18!
09!
0:!
0;!
0<!
0=!
1>!
0?!
0@!
0A!
0B!
0C!
0D!
0E!
0F!
0G!
1H!
0I!
0J!
0K!
0L!
0M!
1N!
0O!
1P!
0Q!
0R!
0S!
0T!
0U!
0V!
0W!
0X!
1Y!
0Z!
0[!
0\!
1]!
0^!
0_!
0`!
0a!
1b!
0c!
0d!
0e!
0f!
0g!
0h!
0i!
0j!
0k!
1l!
0m!
0n!
0o!
0p!
0q!
1r!
0s!
1t!
0u!
0v!
0w!
0x!
0y!
0z!
0{!
0|!
0}!
1~!
0!"
0""
0#"
0$"
0%"
1&"
0'"
0("
0)"
0*"
0+"
0,"
0-"
1."
0/"
00"
01"
02"
03"
04"
05"
16"
07"
18"
09"
0:"
0;"
0<"
0="
0>"
0?"
1@"
0A"
0B"
0C"
0D"
1E"
0F"
0G"
0H"
0I"
0J"
0K"
0L"
0M"
0N"
0O"
0P"
1Q"
1R"
0S"
0T"
0U"
0V"
0W"
0X"
0Y"
1Z"
0["
0\"
0]"
0^"
0_"
0`"
0a"
1b"
0c"
0d"
0e"
0f"
0g"
0h"
0i"
1j"
0k"
1l"
0m"
0n"
0o"
0p"
0q"
0r"
0s"
0t"
0u"
0v"
1w"
0x"
0y"
0z"
0{"
0|"
1}"
1~"
0!#
0"#
0##
0$#
0%#
0&#
0'#
0(#
0)#
0*#
0+#
0,#
0-#
1.#
0/#
00#
01#
12#
03#
04#
05#
06#
07#
18#
19#
0:#
1;#
1<#
0=#
1>#
1?#
1@#
0A#
0B#
0C#
0D#
0E#
0F#
0G#
1H#
1I#
1J#
1K#
0L#
0M#
0N#
1O#
0P#
0Q#
0R#
0S#
$end
#20000
b1 !
b10000000000000000000000000000000 #
b11000000000000000000000000000000 #
b11001000000000000000000000000000 #
b11001100000000000000000000000000 #
b11001100100000000000000000000000 #
b11001100110000000000000000000000 #
b11001100111000000000000000000000 #
b11001100111100000000000000000000 #
b11001100111110000000000000000000 #
b11001100111111000000000000000000 #
b11001100111111000000100000000000 #
b11001100111111000000110000000000 #
b11001100111111000000111000000000 #
b11001100111111000000111000100000 #
b11001100111111000000111000110000 #
b11001100111111000000111000111000 #
b11001100111111000000111000111100 #
b11001100111111000000111000111110 #
b11001100111111000000111000111111 #
b100000000000000000 $
b110000000000000000 $
b111000000000000000 $
b111100000000000000 $
b111110000000000000 $
b111111000000000000 $
b111111000000100000 $
b111111000000110000 $
b111111000000111000 $
b111111000000111100 $
b111111000000111110 $
1}
1&!
1,!
11!
1:!
1d!
1h!
1p!
1u!
1{!
1#"
1{
1~
1%!
1+!
12!
19!
1R!
1V!
1^!
1+"
12"
1<"
1C"
1J"
1V"
1p"
1t"
10#
1L#
1"!
1(!
1*!
14!
1<!
1?!
0l!
1f!
0r!
1j!
0t!
1q!
0~!
1w!
08#
06"
1)"
0&"
1|!
0."
1$"
1S!
1X!
1`!
1B#
1,"
1:#
13"
1C#
1P"
1>"
1D#
1D"
1=#
1L"
1E#
1X"
1G#
1|"
1q"
1v"
1N#
1R#
1|
16#
1u
1W
09#
10"
1-"
1%"
0B#
15"
0D#
0Q"
1?"
1H"
0<#
1O"
1F#
1Y"
0}"
1r"
1z"
1P#
0O#
1D
1&
1g!
1U!
1[!
1a!
19"
1A"
1I"
1S"
1["
1s"
1{"
1S#
1y
1r
1q
1n
1m
1l
1k
1j
1b
1a
1`
1c
1;"
0R#
18
1;
1:
19
11
10
1/
1.
1-
1*
1)
1G
1Q#
1v
1G"
1%
0S#
0y
1M"
0G
1U"
1`"
#200000
b0 !
0"!
1R#
1/"
1'"
1!"
1y!
1s!
1m!
1C!
1=!
15!
1/!
1)!
1Y
1Z
1[
1\
1]
1d
1e
1f
1g
1h
1i
12
13
14
15
16
17
1>
1?
1@
1A
1B
#380000
b1001100111111000000111000111111 #
b1100111111000000111000111111 #
b100111111000000111000111111 #
b111111000000111000111111 #
b11111000000111000111111 #
b1111000000111000111111 #
b111000000111000111111 #
b11000000111000111111 #
b1000000111000111111 #
b111000111111 #
b11000111111 #
b1000111111 #
b111111 #
b11111 #
b1111 #
b111 #
b11 #
b1 #
b0 #
b11111000000111110 $
b1111000000111110 $
b111000000111110 $
b11000000111110 $
b1000000111110 $
b111110 $
b11110 $
b1110 $
b110 $
b10 $
b0 $
0}
0&!
0,!
01!
0:!
0d!
0h!
0p!
0u!
0{!
0#"
0{
0~
0%!
0+!
02!
09!
0R!
0V!
0^!
0+"
02"
0<"
0C"
0J"
0V"
0p"
0t"
00#
0L#
0(!
0*!
04!
0<!
0?!
1l!
0f!
0j!
0q!
0w!
18#
0)"
0|!
0$"
0S!
0X!
0`!
08"
00"
0,"
0:#
0;"
03"
0P"
0G"
0>"
0M"
0D"
0=#
0U"
0L"
0`"
0X"
0|"
0q"
0v"
0N#
0|
06#
1S#
1y
0u
0W
1r!
19#
0-"
0%"
0@"
05"
0C#
0;#
0?"
0R"
0H"
0O"
0E#
0>#
0Y"
1D#
1<#
0~"
1}"
0r"
0z"
0P#
1O#
0D
0&
1G
0)!
0/!
05!
0=!
0C!
0m!
0g!
0s!
0y!
0!"
0U!
0[!
0a!
0b
0a
0`
0g
0f
0e
0c
0d
0]
0\
0[
0Z
0Y
1t!
1;#
0E"
0D#
0<#
0Z"
0F#
0?#
1E#
1>#
0.#
1~"
0R#
0B
0A
0@
0?
0>
07
08
06
05
04
0;
0:
09
0/"
0'"
0A"
09"
0S"
0I"
0["
0s"
0{"
0Q#
0v
0r
0q
0n
0l
0m
0j
0k
0h
0i
1~!
1<#
0E#
0>#
0b"
0G#
0@#
1F#
1?#
02#
1.#
02
03
00
01
0.
0/
0-
0*
0)
0%
0S#
0y
0H#
16"
1&"
1>#
0F#
0?#
0j"
1G#
1@#
12#
0G
0I#
18"
1."
1?#
0G#
0@#
0}"
0l"
1H#
0J#
1Q"
1@"
1@#
0H#
0~"
0w"
1I#
0K#
1R"
1E"
1H#
0I#
0.#
1J#
0O#
1Z"
1I#
0J#
02#
1K#
1b"
1J#
0K#
1O#
1j"
1K#
0O#
1}"
1l"
1O#
1~"
1w"
1.#
12#
#1000000
